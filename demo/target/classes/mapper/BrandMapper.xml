<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BrandMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.entity.Brand">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goodstype" jdbcType="VARCHAR" property="goodstype"/>
        <result column="goodsprice" jdbcType="REAL" property="goodsprice"/>
        <result column="goodsbrand" jdbcType="VARCHAR" property="goodsbrand"/>
        <result column="goodsname" jdbcType="VARCHAR" property="goodsname"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, goodstype, goodsprice, goodsbrand, goodsname
    </sql>


    <!-- 分页查询-->
    <select id="findByPaging" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from brand
    </select>


    <!--查询所有的方法begin-->
    <select id="findall" resultType="com.example.demo.entity.Brand">
        select
        <include refid="Base_Column_List"/>
        from brand
    </select>
    <!--end-->

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from brand
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from brand
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.Brand">
        insert into brand (id, goodstype, goodsprice,
        goodsbrand, goodsname)
        values (#{id,jdbcType=INTEGER}, #{goodstype,jdbcType=VARCHAR}, #{goodsprice,jdbcType=REAL},
        #{goodsbrand,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.entity.Brand">
        insert into brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodstype != null">
                goodstype,
            </if>
            <if test="goodsprice != null">
                goodsprice,
            </if>
            <if test="goodsbrand != null">
                goodsbrand,
            </if>
            <if test="goodsname != null">
                goodsname,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodstype != null">
                #{goodstype,jdbcType=VARCHAR},
            </if>
            <if test="goodsprice != null">
                #{goodsprice,jdbcType=REAL},
            </if>
            <if test="goodsbrand != null">
                #{goodsbrand,jdbcType=VARCHAR},
            </if>
            <if test="goodsname != null">
                #{goodsname,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Brand">
        update brand
        <set>
            <if test="goodstype != null">
                goodstype = #{goodstype,jdbcType=VARCHAR},
            </if>
            <if test="goodsprice != null">
                goodsprice = #{goodsprice,jdbcType=REAL},
            </if>
            <if test="goodsbrand != null">
                goodsbrand = #{goodsbrand,jdbcType=VARCHAR},
            </if>
            <if test="goodsname != null">
                goodsname = #{goodsname,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Brand">
        update brand
        set goodstype = #{goodstype,jdbcType=VARCHAR},
        goodsprice = #{goodsprice,jdbcType=REAL},
        goodsbrand = #{goodsbrand,jdbcType=VARCHAR},
        goodsname = #{goodsname,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>